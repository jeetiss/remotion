(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{121:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return d}));var a=t(3),o=t(7),r=(t(0),t(136)),i={id:"dynamic-metadata",title:"Dynamic duration, FPS & dimensions"},c={unversionedId:"dynamic-metadata",id:"dynamic-metadata",isDocsHomePage:!1,title:"Dynamic duration, FPS & dimensions",description:"Change metadata based on input props",source:"@site/docs/dynamic-metadata.md",slug:"/dynamic-metadata",permalink:"/docs/dynamic-metadata",editUrl:"https://github.com/JonnyBurger/remotion/edit/main/packages/docs/docs/dynamic-metadata.md",version:"current",sidebar:"someSidebar",previous:{title:"Transparent videos",permalink:"/docs/transparent-videos"},next:{title:"CLI options",permalink:"/docs/cli"}},s=[{value:"Change metadata based on input props",id:"change-metadata-based-on-input-props",children:[]},{value:"Change metadata based on asynchronous information",id:"change-metadata-based-on-asynchronous-information",children:[]},{value:"See also",id:"see-also",children:[]}],p={toc:s};function d(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"change-metadata-based-on-input-props"},"Change metadata based on input props"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Available since v2.0.")),Object(r.b)("p",null,"Using ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"parametrized-rendering"}),"Input props")," you can customize the content of your videos while rendering. But what about if you want to change the duration, frame rate or the dimensions of your video based on input props or asynchronous operations?"),Object(r.b)("p",null,"Use the ",Object(r.b)("inlineCode",{parentName:"p"},"getInputProps()")," method to retrieve the props that you have passed as an input.\nFor example if you have passed ",Object(r.b)("inlineCode",{parentName:"p"},'--props=\'{"hello": "world"}\'')," as a command line flag, you can read the value in your Remotion project like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),'const {hello} = getInputProps()\nconsole.log(hello) // "world"\n')),Object(r.b)("p",null,"You can use this technique to dynamically change the frame rate, dimensions or duration of our video as you render. For example, if you pass ",Object(r.b)("inlineCode",{parentName:"p"},'--props={"duration": 100}')," during rendering, the video will be 100 frames long if you define your composition as followed:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),"\nimport {getInputProps, Composition} from 'remotion';\n\nconst inputProps = getInputProps()\n\nexport const Index = () => {\n  return (\n    <>\n      <Composition\n        id=\"MyComposition\"\n        component={MyComponent}\n        width={1920}\n        height={1080}\n        fps={30}\n        durationInFrames={inputProps?.duration ?? 20}\n      >\n    </>\n  )\n}\n")),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"In the example above, we specified fallback duration for use while you are previewing the video, but you can also pass ",Object(r.b)("inlineCode",{parentName:"p"},"--props")," during preview!"))),Object(r.b)("h2",{id:"change-metadata-based-on-asynchronous-information"},"Change metadata based on asynchronous information"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Available since v1.5.")),Object(r.b)("p",null,"Sometimes you need to calculate metadata programmatically in a non-synchronous manner. For example, you have a source video and you want your video to be just as long as the source video. You can use the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/data-fetching"}),Object(r.b)("inlineCode",{parentName:"a"},"delayRender()"),"/",Object(r.b)("inlineCode",{parentName:"a"},"continueRender()"))," pattern for this as well!"),Object(r.b)("p",null,'In this example, we fetch the duration of "Big Buck Bunny" and use it to make our video just that long:'),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),"export const Index: React.FC = () => {\n  const [handle] = useState(() => delayRender());\n  const [duration, setDuration] = useState(1);\n\n  useEffect(() => {\n    const video = document.createElement('video');\n    video.src =\n      'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4';\n\n    video.onloadedmetadata = () => {\n      setDuration(Math.round(video.duration * 30));\n      continueRender(handle);\n    };\n  }, [handle]);\n\n  return (\n    <>\n      <Composition\n        id=\"dynamic-duration\"\n        component={VideoTesting}\n        width={1080}\n        height={1080}\n        fps={30}\n        durationInFrames={duration}\n      />\n    </>\n  )\n}\n")),Object(r.b)("h2",{id:"see-also"},"See also"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"get-input-props"}),Object(r.b)("inlineCode",{parentName:"a"},"getInputProps()")))))}d.isMDXComponent=!0},136:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return b}));var a=t(0),o=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=o.a.createContext({}),d=function(e){var n=o.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=d(e.components);return o.a.createElement(p.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=o.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(t),m=a,b=u["".concat(i,".").concat(m)]||u[m]||l[m]||r;return t?o.a.createElement(b,c(c({ref:n},p),{},{components:t})):o.a.createElement(b,c({ref:n},p))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<r;p++)i[p]=t[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);